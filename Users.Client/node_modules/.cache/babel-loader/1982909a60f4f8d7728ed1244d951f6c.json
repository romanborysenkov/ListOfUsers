{"ast":null,"code":"var _jsxFileName = \"/Users/romsyaborysenko/Documents/folder . . ./My resume project/Users/client/src/components/User.js\",\n    _s = $RefreshSig$();\n\nimport { setSelectionRange } from \"@testing-library/user-event/dist/utils\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaluImageSrc = '/img/profile.png';\nconst initialFieldValues = {\n  userId: 0,\n  userName: '',\n  email: '',\n  profession: '',\n  imageName: '',\n  imageSrc: defaluImageSrc,\n  imageFile: null\n};\nexport default function User(props) {\n  _s();\n\n  const {\n    addOrEdit,\n    recordForEdit\n  } = props;\n  const [values, setValues] = useState(initialFieldValues);\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    if (recordForEdit != null) setValues(recordForEdit);\n  }, [recordForEdit]);\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const showPreview = e => {\n    if (e.target.files && e.target.files[0]) {\n      let imageFile = e.target.files[0];\n      const reader = new FileReader();\n\n      reader.onload = x => {\n        setValues({ ...values,\n          imageFile,\n          imageSrc: x.target.result\n        });\n      };\n\n      reader.readAsDataURL(imageFile);\n    } else {\n      setValues({ ...values,\n        imageFile: null,\n        imageSrc: defaluImageSrc\n      });\n    }\n  };\n\n  const validate = () => {\n    let temp = {};\n    temp.userName = values.userName == \"\" ? false : true;\n    temp.imageSrc = values.imageSrc == defaluImageSrc ? false : true;\n    setErrors(temp);\n    return Object.values(temp).every(x => x == true);\n  };\n\n  const resetForm = () => {\n    setValues(initialFieldValues);\n    document.getElementById('image-uploader').value = null;\n    setErrors({});\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      const formData = new FormData();\n      formData.append('userId', values.userId);\n      formData.append('userName', values.userName);\n      formData.append('email', values.email);\n      formData.append('profession', values.profession); // formData.append('imageName', values.imageName)\n      // formData.append('imageFile', values.imageFile)\n\n      addOrEdit(formData, resetForm);\n    }\n  };\n\n  const applyErrorClass = field => field in errors && errors[field] == false ? ' invalid-field' : '';\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conainer text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: \"An User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: values.imageSrc,\n          className: \"card-img-top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              className: \"form-controle-file\",\n              onChange: showPreview,\n              id: \"image-uploader\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\" + applyErrorClass('userName'),\n              placeholder: \"User Name\",\n              name: \"userName\",\n              value: values.userName,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Email \",\n              name: \"email\",\n              value: values.email,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Profession \",\n              name: \"profession\",\n              value: values.profession,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-light\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(User, \"51R8kvoWXR9dYwXVVdD03+ahdxw=\");\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["setSelectionRange","React","useState","useEffect","defaluImageSrc","initialFieldValues","userId","userName","email","profession","imageName","imageSrc","imageFile","User","props","addOrEdit","recordForEdit","values","setValues","errors","setErrors","handleInputChange","e","name","value","target","showPreview","files","reader","FileReader","onload","x","result","readAsDataURL","validate","temp","Object","every","resetForm","document","getElementById","handleFormSubmit","preventDefault","formData","FormData","append","applyErrorClass","field"],"sources":["/Users/romsyaborysenko/Documents/folder . . ./My resume project/Users/client/src/components/User.js"],"sourcesContent":["import { setSelectionRange } from \"@testing-library/user-event/dist/utils\";\nimport React, { useState, useEffect } from \"react\";\n\nconst defaluImageSrc = '/img/profile.png'\nconst initialFieldValues = {\n     userId: 0,\n     userName: '',\n     email: '',\n     profession: '',\n     imageName:'',\n     imageSrc: defaluImageSrc,\n     imageFile: null\n}\n\n\nexport default function User(props) {\n    const { addOrEdit, recordForEdit } = props\n\n    const [values, setValues] = useState(initialFieldValues)\n    const [errors, setErrors] = useState({})\n\n    useEffect(() => {\n        if(recordForEdit!=null)\n            setValues(recordForEdit);\n    }, [recordForEdit])\n\n    const handleInputChange = e => {\n        const { name, value } = e.target;\n        setValues({\n            ...values,\n            [name]: value\n        })\n    }\n\n    const showPreview = e => {\n        if (e.target.files && e.target.files[0]) {\n            let imageFile = e.target.files[0];\n            const reader = new FileReader();\n            reader.onload = x => {\n                setValues({\n                    ...values,\n                    imageFile,\n                    imageSrc: x.target.result\n                })\n            }\n            reader.readAsDataURL(imageFile)\n        }\n        else {\n            setValues({\n                ...values,\n                imageFile: null,\n                imageSrc: defaluImageSrc\n            })\n        }\n    }\n    const validate = () => {\n        let temp = {}\n        temp.userName = values.userName == \"\" ? false : true;\n        temp.imageSrc = values.imageSrc == defaluImageSrc ? false : true;\n        setErrors(temp)\n        return Object.values(temp).every(x => x == true)\n    }\n\n    const resetForm = () => {\n        setValues(initialFieldValues)\n        document.getElementById('image-uploader').value = null;\n        setErrors({})\n    }\n\n    const handleFormSubmit = e => {\n        e.preventDefault()\n        if (validate()) {\n            const formData = new FormData()\n            formData.append('userId', values.userId)\n            formData.append('userName', values.userName)\n            formData.append('email', values.email)\n            formData.append('profession', values.profession)\n           // formData.append('imageName', values.imageName)\n           // formData.append('imageFile', values.imageFile)\n            addOrEdit(formData, resetForm)\n        }\n    }\n\n    const applyErrorClass = field => ((field in errors && errors[field] == false) ? ' invalid-field' : '')\n\n    return (\n        <>\n            <div className=\"conainer text-center\">\n                <p className=\"lead\">An User</p>\n                </div>\n            <form autoComplete=\"off\" noValidate onSubmit={handleFormSubmit}>\n                <div className=\"card\">\n                    <img src={values.imageSrc} className=\"card-img-top\" />\n                    <div className=\"card-body\">\n                        <div className=\"form-group\">\n                            <input type=\"file\" accept=\"image/*\" className=\"form-controle-file\"\n                                onChange={showPreview} id=\"image-uploader\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <input className={\"form-control\" + applyErrorClass('userName')} placeholder=\"User Name\" name=\"userName\"\n                                value={values.userName} onChange={handleInputChange} />\n                        </div>\n                        <div className=\"form-group\">\n                            <input className=\"form-control\" placeholder=\"Email \" name=\"email\"\n                                value={values.email}\n                                onChange={handleInputChange} />\n                        </div>\n                        <div className=\"form-group\">\n                            <input className=\"form-control\" placeholder=\"Profession \" name=\"profession\"\n                                value={values.profession}\n                                onChange={handleInputChange} />\n                        </div>\n                        <div className=\"form-group text-center\">\n                            <button type=\"submit\" className=\"btn btn-light\">Submit</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}